name: Deploy Monitoring
# memo test06-2
on:
  workflow_dispatch:
    inputs:
      env_name:
        description: 'environment name'
        required: true
        default: 'develop'
        type: choice
        options:
        - develop
        - prod
      tag:
        description: 'version tag'
        required: false
        default: ''

  workflow_call:
    inputs:
      env_name:
        required: true
        type: string
      tag:
        type: string

permissions:
  id-token: write # use id-token(federation role)
  contents: read # use id-token(federation role)
  pull-requests: write
  issues: write

env:
  AWS_REGION: ap-northeast-1
  ROLE_TO_ASSUME_MEMBER: ${{ secrets.ROLE_TO_ASSUME_MEMBER }}
  ROLE_TO_ASSUME_SEC: ${{ secrets.ROLE_TO_ASSUME_SEC }}

jobs:
  cdk-deploy-actions:
    name: CDK Deploy Actions
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.env_name }}
    steps:
      - name: Check
        shell: bash
        working-directory: ./
        run: |
          echo "${{ inputs.env_name }}: Deploy"
          echo "${{ env.ROLE_TO_ASSUME_MEMBER }}"
          echo "${{ env.ROLE_TO_ASSUME_SEC }}"

  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    environment:
      name: ${{ inputs.env_name }}
    env:
      AWS_REGION: ap-northeast-1
      ROLE_TO_ASSUME_MEMBER: ${{ secrets.ROLE_TO_ASSUME_MEMBER }}
      ROLE_TO_ASSUME_BASTION: ${{ secrets.ROLE_TO_ASSUME_BASTION }}
      # ROLE_TO_ASSUME_SEC: ${{ secrets.ROLE_TO_ASSUME_SEC }}
      SES_REGION: ${{ vars.SES_REGION }}
      ROLE_TO_ASSUME_SEC: '["TEST1","TEST2"]'
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: |
          echo "--------------ROLE_TO_ASSUME_SEC1-----------------"
          echo ${{ vars.ROLE_TO_ASSUME_SEC1 }}
          echo "-------------------------------------"
          echo "test=${{ vars.ROLE_TO_ASSUME_SEC1 }}" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=wold" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    environment:
      name: ${{ inputs.env_name }}
    # strategy:
    #   matrix:
    #     sec_roles: ${{ fromJSON(needs.job1.outputs.output1) }}
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2" 
      